import path from 'path';
import { fileURLToPath } from 'url';
import resolve from '@rollup/plugin-node-resolve';
import typescript from '@rollup/plugin-typescript';
import replace from '@rollup/plugin-replace';
import bundleSize from 'rollup-plugin-bundle-size';
import commonjs from '@rollup/plugin-commonjs';
import json from '@rollup/plugin-json';
import { terser } from 'rollup-plugin-terser';

const __dirname = path.dirname(fileURLToPath(import.meta.url));

const NODE_ENV = process.env['NODE_ENV'] || 'development';
const output = {
  format: 'iife',
  sourcemap: NODE_ENV === 'development',
  // This will minify the wrapper code generated by rollup.
  compact: false,
  freeze: false,
  strict: false,
};
const uglifyOptions = {
  compress: {
    loops: false,
    keep_fargs: false,
    unsafe: true,
    pure_getters: true,
  },
};
const plugins = [
  resolve({
    jsnext: true,
    main: true,
    browser: true,
  }),
  replace({
    'process.env.NODE_ENV': JSON.stringify(NODE_ENV),
    "import 'es6-promise/dist/es6-promise.auto'":
      process.env.PATCH_PROMISE_POLYFILL === 'true' &&
      process.env.FLUTTER_DOM_JS_ENGINE === 'jsc'
        ? "import 'es6-promise/dist/es6-promise.auto';"
        : '',
    delimiters: ['', ''],
    preventAssignment: false,
  }),
  bundleSize(),
];

export default [
  {
    input: path.join(__dirname, '../src/js-dom/index.ts'),
    output: { file: 'dist/JsDom.js', ...output },
    plugins: [
      ...plugins,
      typescript({
        compilerOptions: {
          // 需要输出，否则会编译失败
          noEmit: false,
          // 输出类型文件
          declaration: false,
        },
      }),
      commonjs(),
      json(),
      NODE_ENV === 'development' ? null : terser(uglifyOptions),
    ],
    context: 'window',
  },
  {
    input: 'src/flutter-dom-bridge/index.ts',
    output: { file: 'dist/FlutterDomBridge.js', ...output },
    plugins: [
      ...plugins,
      typescript({
        compilerOptions: {
          // 需要输出，否则会编译失败
          noEmit: false,
          // 输出类型文件
          declaration: false,
        },
      }),
      NODE_ENV === 'development' ? null : terser(uglifyOptions),
    ],
    context: 'window',
  },
];
